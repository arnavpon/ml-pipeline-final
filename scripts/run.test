#!/bin/tcsh

# ======================================================================
# Parameters
# ======================================================================

echo "Bhim pipeline preprocessing script..."
set data_root = /pipeline  # data root inside container - folder contains run.test, Req_Files, & /datadir/
set template_dir = $data_root/Req_Files  # location of pre-processing files
set data_dir = $data_root/datadir  # location of fMRI data folders for subjects

# Define file formats
set epis = bold.nii.gz  # base file format
set epis_dn = bold.dn.nii # denoised file format
set epis_dn_shift = bold.dn_shft.nii # center-aligned file format
set OneD_dn_shift = bold.dn_shft.1D  # aligned file format

if ("$1" == "") then
  echo "Please specify a subject in the run command to perform pre-processing"

else if (! -d $data_dir/$1) then
  # make sure directory exists for the specified subject @ /pipeline/datadir/subject
  echo "Directory does not exist for subject $1"

else if (! -f $data_dir/$1/$epis) then
  # make sure required BOLD.nii.gz file is present inside subject folder @ /pipeline/datadir/subject/bold.nii.gz
  echo "Subject directory must contain a $epis file"

else
  set subj_id = $1  # subject name - argument in command `tcsh run.test subj_id`
  cd $data_dir/$subj_id  # navigate INTO subject directory so results output INSIDE folder
  echo "Performing pre-processing for subject: $subj_id"
  set subj = $data_dir/$subj_id  # location of subject's data folder

  set anat = $template_dir/vr_base_min_outlier+orig  # outliers file
  #set anat = $template_dir/ENIGMA_Template.nii.gz  # template file ***
  set label = AL

  set WMset    = wm.erode.18.nii
  set ventset  = vent.erode.18.nii

  #----------
  # denoise (MRTrix)
  #-----------
  echo "Denoising data..."
  dwidenoise -noise $subj/noise.nii $subj/$epis $subj/$epis_dn

  #----------
  # align center
  #----------
  echo "Aligning center..."
  @Align_Centers -base MNI_caez_N27+tlrc. -dset $subj/$epis_dn
  mv $OneD_dn_shift $subj/$OneD_dn_shift

  #----------
  # afni_proc steps (from Dr. Bhim)
  #----------
  afni_proc.py -subj_id $subj_id	                           \
      -blocks despike tshift tlrc volreg blur mask regress   \
      -copy_anat $anat                                       \
      -dsets $subj/$epis_dn_shift			                       \
      -bash                                                  \
      -tlrc_base $template_dir/ENIGMA_Template.tlrc.nii.gz	 \
      -volreg_align_to MIN_OUTLIER                           \
      -volreg_tlrc_warp                                      \
      -volreg_warp_dxyz 2                                    \
      -mask_import vent $template_dir/$ventset	             \
      -mask_import WM $template_dir/$WMset	                 \
      -regress_ROI_PC vent 3                                 \
      -regress_anaticor_fast                                 \
      -regress_anaticor_label WM                             \
      -regress_censor_motion 0.2                             \
      -regress_censor_outliers 0.1                           \
      -regress_apply_mot_types demean deriv                  \
      -regress_est_blur_epits


  #----------
  # run preprocessing file that is generated by AFNI_proc
  #----------
  grep -v "3dcopy /pipeline/Req_Files/vr_base_min_outlier+orig" ./proc.$subj_id > ./proc2.$subj_id  # remove line causing error
  grep -v "output_dir/vr_base_min_outlier" ./proc2.$subj_id > ./proc.$subj_id  # remove rest of line
  ./proc.$subj_id  # run the edited script

  cd ..  # after operation is completed, step out of subject directory

endif
